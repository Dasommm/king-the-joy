CREATE TABLE LETTER (
	LETTER_SEQ	NUMBER	NOT NULL,
	MEMBER_SEQ	NUMBER	NOT NULL,
	LETTER_SENDER	VARCHAR2(100)	NULL,
	LETTER_TITLE	VARCHAR2(200)	NULL,
	LETTER_CONTENT	VARCHAR2(2000)	NULL,
	LETTER_REGDATE	DATE	NULL,
	LETTER_STATUS	NUMBER	NULL,
	
	CONSTRAINT LETTER_PK_LETTER_SEQ PRIMARY KEY(LETTER_SEQ),
	CONSTRAINT LETTER_FK_MEMBER_SEQ FOREIGN KEY(MEMBER_SEQ) REFERENCES "MEMBER"(MEMBER_SEQ)
);
CREATE SEQUENCE LETTER_SEQ;

SELECT * FROM LETTER;

INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'임성훈','문의2 재질문','관리자씨 MEMBER_ID: a1234 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'학부모','문의3 재질문','관리자씨 MEMBER_ID: zzzzzz 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'학부모1','4문의 재질문','관리자씨 MEMBER_ID: gkrqnah1 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'원장님','문의6 재질문','관리자씨 MEMBER_ID: wonjang 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'학부모3','PARENT','관리자씨 MEMBER_ID: parent 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,1,'선생님1','SOM','관리자씨 MEMBER_ID: som 입니다',SYSDATE,0);

INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'임성훈','문의2','관리자씨 MEMBER_ID: a1234 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'학부모','문의3','관리자씨 MEMBER_ID: zzzzzz 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'학부모1','4문의','관리자씨 MEMBER_ID: gkrqnah1 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'원장님','문의6','관리자씨 MEMBER_ID: wonjang 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'학부모3','PARENT','관리자씨 MEMBER_ID: parent 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,2,'선생님1','SOM','관리자씨 MEMBER_ID: som 입니다',SYSDATE,0);

INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'임성훈','문의2','관리자씨 MEMBER_ID: a1234 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'학부모','문의3','관리자씨 MEMBER_ID: zzzzzz 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'학부모1','4문의','관리자씨 MEMBER_ID: gkrqnah1 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'원장님','문의6','관리자씨 MEMBER_ID: wonjang 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'학부모3','PARENT','관리자씨 MEMBER_ID: parent 입니다',SYSDATE,0);
INSERT INTO LETTER VALUES(LETTER_SEQ.NEXTVAL,3,'선생님1','SOM','관리자씨 MEMBER_ID: som 입니다',SYSDATE,0);

SELECT * FROM MEMBER
SELECT member_image FROM MEMBER WHERE member_seq = 1
UPDATE MEMBER SET MEMBER_IMAGE = "1.jpg" WHERE member_seq = 2
UPDATE MEMBER SET MEMBER_IMAGE = '/kingthejoy/resources/gallery/1/1.jpg' WHERE member_seq = 2

// 게시글 불러오기
SELECT B.* 
FROM (SELECT A.*, ROWNUM AS RNUM
FROM (SELECT * FROM LETTER
WHERE MEMBER_SEQ=1
ORDER BY LETTER_STATUS, LETTER_SEQ DESC) A) B
WHERE RNUM BETWEEN 1 AND 10

SELECT COUNT(*) AS TOTALROWS FROM
(SELECT * FROM LETTER
WHERE MEMBER_SEQ=1)

SELECT COUNT(*)
FROM MEMBER
WHERE MEMBER_ID = 'user'

SELECT B.*
FROM (SELECT A.*, ROWNUM AS RNUM
FROM (SELECT * FROM LETTER JOIN MEMBER USING(MEMBER_SEQ)
WHERE LETTER_SENDER='admin'
ORDER BY LETTER_SEQ DESC) A) B
WHERE RNUM BETWEEN 1 AND 10

SELECT * FROM LETTER JOIN MEMBER USING(MEMBER_SEQ)
WHERE MEMBER_SEQ IN (2,2,3,2,3,2)
AND LETTER_SENDER = 'admin'
ORDER BY LETTER_SEQ DESC

CREATE TABLE CLASS(
   CLASS_SEQ NUMBER PRIMARY KEY,
   CLASS_NAME VARCHAR2(500) NOT NULL,
   CHILDREN_SEQ NUMBER NOT NULL,
   MEMBER_SEQ NUMBER NOT NULL,
   SCHOOL_SEQ NUMBER NOT NULL,
    
   CONSTRAINT CLASS_FK_KID FOREIGN KEY(CHILDREN_SEQ) REFERENCES CHILDREN(CHILDREN_SEQ) ON DELETE CASCADE,
   CONSTRAINT CLASS_FK_SCH FOREIGN KEY(SCHOOL_SEQ) REFERENCES SCHOOL_LIST(SCHOOL_SEQ) ON DELETE CASCADE,
   CONSTRAINT CLASS_FK_MEM FOREIGN KEY(MEMBER_SEQ) REFERENCES MEMBER(MEMBER_SEQ) ON DELETE CASCADE
)

--스케쥴
CREATE SEQUENCE SCHEDULESEQ;

CREATE TABLE SCHEDULE(
SCHEDULE_SEQ NUMBER NOT NULL,
MEMBER_SEQ NUMBER NOT NULL,
SCHEDULE_TITLE VARCHAR2(200) NOT NULL,
SCHEDULE_START VARCHAR2(20) NOT NULL,
SCHEDULE_END VARCHAR2(20) NOT NULL,
SCHEDULE_DESCRIPTION VARCHAR2(2000) NOT NULL,
SCHEDULE_COLOR VARCHAR2(500) NOT NULL,
SCHOOL_SEQ NUMBER NOT NULL,
CONSTRAINT SCHEDULE_PK_SCHEDULE_SEQ PRIMARY KEY(SCHEDULE_SEQ),
CONSTRAINT SCHEDULE_FK_MEMBER_SEQ FOREIGN KEY(MEMBER_SEQ) REFERENCES "MEMBER" (MEMBER_SEQ)
);

CREATE TABLE CHILDREN(
   CHILDREN_SEQ NUMBER NOT NULL,
   MEMBER_SEQ NUMBER NOT NULL,
   CHILDREN_NAME VARCHAR2(500) NOT NULL,
   RIDING_QUIT VARCHAR2(50) NOT NULL,
   
   CONSTRAINT CHILDREN_PK_CHILDREN_SEQ PRIMARY KEY(CHILDREN_SEQ),
   CONSTRAINT CHILDREN_FK_MEMBER_SEQ FOREIGN KEY(MEMBER_SEQ) REFERENCES "MEMBER"(MEMBER_SEQ)
);
